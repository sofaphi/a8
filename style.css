.close:hover circle, .close:hover symbol line{
    stroke: rgb(240, 46, 46);
}

.menu {
    background-color: transparent;
    border: none;
    cursor: pointer;
    display: flex;
    padding: 0;
}

button {
    appearance: auto;
    -webkit-writing-mode: horizontal-tb !important;
    text-rendering: auto;
    color: -internal-light-dark(black, white);
    letter-spacing: normal;
    word-spacing: normal;
    text-transform: none;
    text-indent: 0px;
    text-shadow: none;
    display: inline-block;
    text-align: center;
    align-items: flex-start;
    cursor: default;
    background-color: -internal-light-dark(rgb(239, 239, 239), rgb(59, 59, 59));
    box-sizing: border-box;
    margin: 0em;
    font: 400 13.3333px Arial;
}

button {
    -webkit-writing-mode: horizontal-tb !important;
    text-rendering: auto;
    color: -internal-light-dark(black, white);
    letter-spacing: normal;
    word-spacing: normal;
    text-transform: none;
    text-indent: 0px;
    text-shadow: none;
    text-align: center;
    cursor: default;
    font: 400 13.3333px Arial;
}


.line1 {
    stroke-dasharray: 60 207;
    stroke-width: 6;
}

.line {
    fill: none;
    stroke: black;
    stroke-width: 6;
    transition: stroke-dasharray 600ms rotate(45deg);
}

.line2 {
    stroke-dasharray: 60 60;
    stroke-width: 6;
}

.line {
    fill: none;
    stroke: black;
    stroke-width: 6;
    transition: stroke-dasharray 600ms rotate(45deg);
}

.line3 {
    stroke-dasharray: 60 207;
    stroke-width: 6;
}

.opened .line1 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    stroke-width: 6;
}

.opened .line2 {
    display: none;
}

.opened .line3 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    stroke-width: 6;
}


.clock {
    width: 400px;
    fill: white;
    stroke: black;
    stroke-width: 1;
    stroke-linecap: round;
    transform: rotate(-90deg);
    --start-seconds: 57;
    --start-minutes: 45;
    --start-hours: 11;
  }
  
  .marks {
    transform: translate(20px, 20px);
    stroke-width: 0.2;
  }
  .marks > line:nth-child(1) {
    /* There are 12 marks, so we rotate by 30deg (12 * 30 = 360) */
    transform: rotate(30deg);
  }
  .marks > line:nth-child(2) {
    transform: rotate(calc(2 * 30deg));
  }
  .marks > line:nth-child(3) {
    transform: rotate(calc(3 * 30deg));
    stroke-width: 0.5;
  }
  .marks > line:nth-child(4) {
    transform: rotate(calc(4 * 30deg));
  }
  .marks > line:nth-child(5) {
    transform: rotate(calc(5 * 30deg));
  }
  .marks > line:nth-child(6) {
    transform: rotate(calc(6 * 30deg));
    stroke-width: 0.5;
  }
  .marks > line:nth-child(7) {
    transform: rotate(calc(7 * 30deg));
  }
  .marks > line:nth-child(8) {
    transform: rotate(calc(8 * 30deg));
  }
  .marks > line:nth-child(9) {
    transform: rotate(calc(9 * 30deg));
    stroke-width: 0.5;
  }
  .marks > line:nth-child(10) {
    transform: rotate(calc(10 * 30deg));
  }
  .marks > line:nth-child(11) {
    transform: rotate(calc(11 * 30deg));
  }
  .marks > line:nth-child(12) {
    transform: rotate(calc(12 * 30deg));
    stroke-width: 0.5;
  }
  
  .seconds,
  .minute,
  .hour
  {
    transform: translate(20px, 20px) rotate(0deg);
  }
  .seconds {
    stroke-width: 0.3;
    stroke: #d00505;
    transform: translate(20px, 20px) rotate(calc(var(--start-seconds) * 6deg));
    animation: rotateSecondsHand 60s steps(60) infinite;
  }
  
  @keyframes rotateSecondsHand {
    from {
      transform: translate(20px, 20px) rotate(calc(var(--start-seconds) * 6deg));
    }
    to {
      transform: translate(20px, 20px) rotate(calc(var(--start-seconds) * 6deg + 360deg));
    }
  }
  
  .minute {
    stroke-width: 0.6;
    transform: translate(20px, 20px) rotate(calc(var(--start-minutes) * 6deg));
    animation: rotateMinuteHand 3600s steps(60) infinite;
    animation-delay: calc(var(--start-seconds) * -1 * 1s);
  }
  
  @keyframes rotateMinuteHand {
    from {
      transform: translate(20px, 20px) rotate(calc(var(--start-minutes) * 6deg));
    }
    to {
      transform: translate(20px, 20px) rotate(calc(var(--start-minutes) * 6deg + 360deg));
    }
  }
  
  .hour {
    stroke-width: 1;
    transform: translate(20px, 20px) rotate(calc(var(--start-hours) * 30deg));
    animation: rotateHourHand calc(12 * 60 * 60s) linear infinite;
    animation-delay: calc(calc(var(--start-minutes) * -60 * 1s) + calc(var(--start-seconds) * -1 * 1s));
  }
  
  @keyframes rotateHourHand {
    from {
      transform: translate(20px, 20px) rotate(calc(var(--start-hours) * 30deg));
    }
    to {
      transform: translate(20px, 20px) rotate(calc(var(--start-hours) * 30deg + 360deg));
    }
  }
  
  .pin {
    stroke: #d00505;
    stroke-width: 0.2;
  }

  
  #svg_29:hover {
    fill: green;
  }
  
  .open {
    fill: #FFFF66;
  }
  